#!/sbin/openrc-run

name="GitLab"
description="GitLab git repository management"

: ${rails_env:=@RAILS_ENV@}

: ${gitlab_user:=@GIT_USER@}
: ${gitlab_group:=@GIT_GROUP@}
: ${gitlab_home:="@DEST_DIR@"}
: ${gitlab_config:="@DEST_DIR@/config"}
: ${gitlab_pids:="@DEST_DIR@/tmp/pids"}
: ${gitlab_sockets:="@DEST_DIR@/tmp/sockets"}
: ${gitlab_log:="@LOG_DIR@"}
: ${gitlab_env:=""}
# add settings for GITLAB_UNICORN_MEMORY_MIN and GITLAB_UNICORN_MEMORY_MAX if needed

: ${gitaly_home:="@GITLAB_GITALY@"}
: ${gitaly_config:="@GITALY_CONF@"}

: ${webserver_pidfile:="${gitlab_pids}/@WEBSERVER@.pid"}
: ${webserver_log:="${gitlab_log}/@WEBSERVER@.log"}
: ${webserver_socket:="${gitlab_sockets}/gitlab.socket"}
: ${webserver_command:="/usr/bin/bundle"}
: ${webserver_command_args:="exec @WEBSERVER_BIN@ -@WEBSERVER_C@ ${gitlab_config}/@WEBSERVER@.rb -@WEBSERVER_E@ ${rails_env} -@WEBSERVER_D@"}

: ${sidekiq_pidfile:="${gitlab_pids}/sidekiq.pid"}
: ${sidekiq_log:="${gitlab_log}/sidekiq.log"}
: ${sidekiq_processes:="* * * * *"}
: ${sidekiq_command:="@DEST_DIR@/bin/sidekiq-cluster"}
: ${sidekiq_command_args:="-e ${rails_env}"}

: ${mailroom_enabled:=@MAILROOM_ENABLED@}
: ${mailroom_pidfile:="${gitlab_pids}/mailroom.pid"}
: ${mailroom_log:="${gitlab_log}/mailroom.log"}
: ${mailroom_config:="${gitlab_config}/mail_room.yml"}
: ${mailroom_command:="/usr/bin/bundle"}
: ${mailroom_command_args:="exec mail_room -q -c ${mailroom_config}"}

: ${workhorse_pidfile:="${gitlab_pids}/workhorse.pid"}
: ${workhorse_log:="${gitlab_log}/workhorse.log"}
: ${workhorse_socket:="${gitlab_sockets}/gitlab-workhorse.socket"}
: ${workhorse_command:="@WORKHORSE_BIN@/gitlab-workhorse"}
: ${workhorse_command_args="-listenUmask 0 -listenNetwork unix -listenAddr ${workhorse_socket} -authBackend http://127.0.0.1:8080 -documentRoot ${gitlab_home}/public -authSocket ${webserver_socket}"}

: ${gitaly_command:="${gitaly_home}/bin/gitaly"}
: ${gitaly_command_args:="${gitaly_config}/config.toml"}
: ${gitaly_pidfile:="${gitlab_pids}/gitaly.pid"}
: ${gitaly_log:="${gitlab_log}/gitaly.log"}
: ${gitaly_socket:="${gitlab_sockets}/gitaly.socket"}


if [ ${rails_env} = development ]; then
	sidekiq_command_args+=" VVERBOSE=1"
fi

depend() {
	provide gitlab
	need redis
	use net postgresql
}

start() {

	checkpath -d -o "${gitlab_user}:${gitlab_group}" -m750 "$(dirname "${sidekiq_pidfile}")"
	checkpath -d -o "${gitlab_user}:${gitlab_group}" -m750 "$(dirname "${webserver_pidfile}")"
	checkpath -d -o "${gitlab_user}:${gitlab_group}" -m755 "$(dirname "${webserver_socket}")"

	ebegin "Starting GitLab @SLOT@ web server @WEBSERVER_NAME@"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${webserver_pidfile}" \
		--background -1 "${webserver_log}" -2 "${webserver_log}" \
		--exec ${webserver_command} -- ${webserver_command_args}
	eend $?

	ebegin "Starting GitLab @SLOT@ Sidekiq"
	supervise-daemon ${RC_SVCNAME} --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${sidekiq_pidfile}" \
		-1 "${sidekiq_log}" -2 "${sidekiq_log}" \
		${sidekiq_command} -- "${sidekiq_processes}" ${sidekiq_command_args}
	eend $?

	ebegin "Starting GitLab @SLOT@ Workhorse"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--env "PATH=/opt/gitlab/gitlab-workhorse/bin/:$PATH" \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${workhorse_pidfile}" \
		--make-pidfile \
		--background -1 "${workhorse_log}" -2 "${workhorse_log}" \
		--exec ${workhorse_command} -- ${workhorse_command_args}
	eend $?

	if [ "$mailroom_enabled" = true ]; then
	ebegin "Starting GitLab @SLOT@ MailRoom"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${mailroom_pidfile}" \
		--make-pidfile \
		--background -1 "${mailroom_log}" -2 "${mailroom_log}" \
		--exec ${mailroom_command} -- ${mailroom_command_args}
	eend $?
	fi

	ebegin "Starting GitLab @SLOT@ Gitaly"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--env GITALY_SOCKET_PATH=${gitaly_socket} \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${gitaly_pidfile}" \
		--make-pidfile \
		--background -1 "${gitaly_log}" -2 "${gitaly_log}" \
		--exec ${gitaly_command} -- ${gitaly_command_args}
	eend $?
}

stop() {
	ebegin "Stopping GitLab @SLOT@ Gitaly"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${gitaly_pidfile}"
	eend $?

	if [ "$mailroom_enabled" = true ]; then
	ebegin "Stopping GitLab @SLOT@ MailRoom"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${mailroom_pidfile}" \
	eend $?
	fi

	ebegin "Stopping GitLab @SLOT@ Workhorse"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${workhorse_pidfile}"
	eend $?

	ebegin "Stopping GitLab @SLOT@ Sidekiq"
	supervise-daemon ${RC_SVCNAME} --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${sidekiq_pidfile}"
	eend $?

	ebegin "Stopping GitLab @SLOT@ @WEBSERVER_NAME@ servers"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${webserver_pidfile}"
	eend $?
}

do_status()
{
	name="Gitlab @SLOT@ $1"
	msg=$(pidfile=$2 default_status 2>&1 | awk -F': ' '{print $2}')
	pidfile=$2 default_status &>/dev/null
	status=$?

	if [[ $status -eq 0 ]] ; then
		einfo "$name: $msg"
	else
		eerror "$name: $msg"
	fi
	
	eend $status
}

status()
{
	do_status "Gitaly" ${gitaly_pidfile}
	do_status "Workhorse" ${workhorse_pidfile}
	do_status "Sidekiq" ${sidekiq_pidfile}
	do_status "@WEBSERVER_NAME@" ${webserver_pidfile}
}
